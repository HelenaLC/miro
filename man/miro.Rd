% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miro.R
\name{miro}
\alias{miro}
\alias{miro,SpatialExperiment-method}
\alias{miro,SingleCellExperiment-method}
\alias{miro,data.frame-method}
\title{Visuals for Spatial (Transcript)Omics}
\usage{
\S4method{miro}{SpatialExperiment}(dat, pol = NULL, mol = NULL, ...)

\S4method{miro}{SingleCellExperiment}(dat, pol = NULL, mol = NULL, assay = NULL, ...)

\S4method{miro}{data.frame}(
  dat,
  pol = NULL,
  mol = NULL,
  xy = FALSE,
  dat_xy = NULL,
  dat_id = NULL,
  dat_pal = NULL,
  dat_aes = list(),
  pol_xy = NULL,
  pol_id = NULL,
  pol_pal = NULL,
  pol_aes = list(),
  mol_xy = NULL,
  mol_id = NULL,
  mol_pal = NULL,
  mol_aes = list(),
  mol_key = NULL,
  keys = NULL,
  fov_id = NULL,
  dat_t = c("n", "q", "z"),
  sub = NULL,
  hl = NULL,
  na = NULL,
  thm = c("w", "b")
)
}
\arguments{
\item{dat}{...}

\item{pol, mol}{character string; polygons/molecules .parquet}

\item{...}{optional arguments passed between methods}

\item{assay}{scalar integer or character string;
specifies which `assay` data to use when coloring by
feature names; defaults to the last one available;
ignored when `dat` is a `data.frame`}

\item{xy}{logical scalar; should centroids be rendered?
by default, they are hidden when `pol/mol` aren't NULL}

\item{dat_xy, pol_xy, mol_xy}{character vector; spatial coordinates}

\item{dat_id, pol_id, mol_id}{character string; observation identifiers}

\item{dat_pal, pol_pal, mol_pal}{character vector; 
palette to use for centroids/polygons/molecules}

\item{dat_aes, pol_aes, mol_aes}{list; 
aesthetics for rendering centroids/polygons/molecules;
passed to `geom_point` for centroids/molecules, 
and `geom_polygon` for polygons}

\item{mol_key}{character string; feature identifier}

\item{keys}{character vectors; specifies which 
features molecules should be rendered for}

\item{fov_id}{character string; field of view identifier}

\item{dat_t}{character string or function; 
specifies whether/how to transform values being 
colored by; `n`one, `z`-scale, or `q`uantile scale}

\item{sub, hl}{observations to subset/highlight;
either a logical or character vector, or a character string
specifying a logical `colData` slot or `data.frame` column;
fill of non-highlighted observations will be set to NA}

\item{na}{character string; color to use for NA values}

\item{thm}{character string; visualize using
either `"b"`lack or `"w"`hite base theme}
}
\value{
`ggplot`
}
\description{
`miro` provides a one-line command to visualize multi-layered data from
a .parquet-backed `Spatial-`, `SingleCellExperiment`, or `data.frame`.

To achieve this, data needs to be matched between objects with potentially 
different dimension names (e.g., spatial coordinates, cell identifiers). 

To try and avoid cumbersome passing of many arguments, `miro` tries to guess 
these from a catalog of values encountered across commercial platforms such 
as CosMx (NanoString) and Xenium (10x Genomics).

In addition, each layer is associated with a designed set of aesthetics, 
(e.g., color mapping, size etc.) allowing for highly flexible visualization.
}
\examples{
spe <- miro::xen()
m <- "transcripts"  
p <- "cell_boundaries"

# centroids
miro(spe, dat_aes=list(size=0.2, col="total_counts"), dat_t=log10)
  
# polygons
miro(spe, pol=p, pol_aes=list(fill="cell_area"))

# polygons + centroids
miro(spe[, 400:600], pol=p, xy=TRUE, 
  dat_aes=list(col="white", size=1))

# molecules  
miro(spe, mol=m, mol_aes=list(size=0.4),
  keys=c("MYC", "FABP1", "CEACAM5", "GPX2", "CD24"), 
  mol_pal=c("blue", "cyan", "magenta", "black", "gold"))

}
